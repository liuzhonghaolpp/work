package com.liu.Entity;
// Generated 2017-7-10 19:35:37 by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id 

;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "project")
public class Order implements java.io 

.Serializable {

	/**
	 * 属性
	 */
	private static final long serialVersionUID = -7703044833463932217L;
	private String id; //订单id
	private Business business; //与订单关联的商家实体类
	private Customer customer; //与订单关联的买家实体类
	private Products products; //与订单关联的商品实体类
	private String product;    //购买商品的名称
	private String customer_1; //买家昵称
	private int number;        //购买商品数量
	private double totalprice; //购买商品的总价
	private Date date;         //订单生成的日期
	private String comment;    //用户的评价
	private String state;      //订单的状态

	public Order() {
	}

	public Order(String id, Customer customer, Products products, String product, String customer_1, int number,
			double totalprice, Date date, String state) {
		this.id 

 = id;
		this.customer = customer;
		this.products = products;
		this.product = product;
		this.customer_1 = customer_1;
		this.number = number;
		this.totalprice = totalprice;
		this.date = date;
		this.state = state;
	}

	public Order(String id, Customer customer, Products products, String product, String customer_1, int number,
			double totalprice, Date date, String comment, String state) {
		this.id 

 = id;
		this.customer = customer;
		this.products = products;
		this.product = product;
		this.customer_1 = customer_1;
		this.number = number;
		this.totalprice = totalprice;
		this.date = date;
		this.comment = comment;
		this.state = state;
	}

	@Id

	@GeneratedValue(generator = "uuid")
	@GenericGenerator(name = "uuid", strategy = "uuid")
	@Column(name = "id", unique = true, nullable = false, length = 36)
	public String getId() {
		return this.id 

;
	}

	public void setId(String id) {
		this.id 

 = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "businessid")
	public Business getBusiness() {
		return business;
	}

	public void setBusiness(Business business) {
		this.business = business;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cosid")
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "proid")
	public Products getProducts() {
		return this.products;
	}

	public void setProducts(Products products) {
		this.products = products;
	}

	@Column(name = "product", length = 45)
	public String getProduct() {
		return this.product;
	}

	public void setProduct(String product) {
		this.product = product;
	}

	@Column(name = "customer", length = 45)
	public String getCustomer_1() {
		return this.customer_1;
	}

	public void setCustomer_1(String customer_1) {
		this.customer_1 = customer_1;
	}

	@Column(name = "number")
	public int getNumber() {
		return this.number;
	}

	public void setNumber(int number) {
		this.number = number;
	}

	@Column(name = "totalprice", precision = 22, scale = 0)
	public double getTotalprice() {
		return this.totalprice;
	}

	public void setTotalprice(double totalprice) {
		this.totalprice = totalprice;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "comment", length = 200)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Column(name = "state", length = 45)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

}